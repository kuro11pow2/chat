namespace Tests
{
    public class RoomTests
    {
        [Theory]
        [InlineData(@"0123", @"0123")]
        [InlineData(@"abcxyz", @"abcxyz")]
        [InlineData(@"@!#$%^()[]", @"@!#$%^()[]")]
        [InlineData(@"가나다뀕팛", @"가나다뀕팛")]
        [InlineData(@"😂🤣⛴🛬🎁", @"😂🤣⛴🛬🎁")]
        [InlineData
        [InlineData
        static async Task LocalRoomTest(string input, string expected)
        {
            int port = 1234;
            int userCount = 3;

            Room room = new Room("room0", port);
            _ = room.Run();
            _ = room.RunMonitor();

            List<User> users = new List<User>();
            for (int i = 0; i < userCount; i++)
            {
                users.Add(new User("127.0.0.1", port, i));
            }

            foreach (var user in users)
            {
                await user.Connect();
            }

            IMessage message = new Utf8Message();
            message.SetMessage(input);

            for (int i = 0; i < users.Count; i++)
            {
                await users[i].Send(message);

                foreach (var user in users)
                {
                    var output = await user.Receive();
                    var output_message = output.GetMessage();
                    Assert.Equal(expected, output_message);
                }
            }

            foreach (var user in users)
            {
                user.Disconnect();
            }
        }
    }
}